name: Build Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Extract package version
      id: package_version
      run: |
        VERSION=$(grep '"version":' package.json | cut -d '"' -f 4)
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run build
    
    - name: Create Chrome ZIP
      run: npm run zip
    
    - name: Create Firefox ZIP
      run: npm run zip:firefox
      
    - name: List output directory
      run: |
        echo "Output directory contents:"
        ls -l .output/
        find .output -name "*.zip" | sort
    
    - name: Upload Chrome build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension
        path: .output/daynight-mode-0.0.0-chrome.zip
        if-no-files-found: error
        retention-days: 1
    
    - name: Upload Firefox build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firefox-extension
        path: .output/daynight-mode-${{ steps.package_version.outputs.VERSION }}-firefox.zip
        if-no-files-found: error
        retention-days: 1

    - name: Debug version and paths
      run: |
        echo "Version: ${{ steps.package_version.outputs.VERSION }}"
        echo "Expected Chrome ZIP: .output/daynight-mode-${{ steps.package_version.outputs.VERSION }}-chrome.zip"
        echo "Expected Firefox ZIP: .output/daynight-mode-${{ steps.package_version.outputs.VERSION }}-firefox.zip"
        echo "Actual files in .output directory:"
        ls -la .output/

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Extract version from package.json
      id: package_version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    # Debug artifacts and workflow
    - name: List available artifacts
      run: |
        echo "Workflow run ID: ${{ github.run_id }}"
        echo "Available artifacts via API:"
        curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
    
    - name: Download Chrome artifact
      uses: actions/download-artifact@v4
      with:
        name: chrome-extension
        path: ./chrome-extension
    
    - name: Download Firefox artifact
      uses: actions/download-artifact@v4
      with:
        name: firefox-extension
        path: ./firefox-extension
    
    - name: List downloaded files
      run: |
        echo "Chrome artifacts:"
        ls -la ./chrome-extension || echo "Chrome directory not found"
        echo "Firefox artifacts:"
        ls -la ./firefox-extension || echo "Firefox directory not found"
    
    - name: Find Chrome ZIP file
      id: chrome_zip
      run: |
        ZIP_FILE=$(ls ./chrome-extension/daynight-mode-*-chrome.zip | head -n 1)
        if [ -f "$ZIP_FILE" ]; then
          echo "CHROME_ZIP=$ZIP_FILE" >> $GITHUB_OUTPUT
        else
          echo "No Chrome ZIP found in ./chrome-extension/"
          ls -la ./chrome-extension/
          exit 1
        fi
    
    - name: Find Firefox ZIP file
      id: firefox_zip
      run: |
        ZIP_FILE=$(ls ./firefox-extension/daynight-mode-*-firefox.zip | head -n 1)
        if [ -f "$ZIP_FILE" ]; then
          echo "FIREFOX_ZIP=$ZIP_FILE" >> $GITHUB_OUTPUT
        else
          echo "No Firefox ZIP found in ./firefox-extension/"
          ls -la ./firefox-extension/
          exit 1
        fi
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.package_version.outputs.VERSION }}
        name: Release v${{ steps.package_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          ${{ steps.chrome_zip.outputs.CHROME_ZIP }}
          ${{ steps.firefox_zip.outputs.FIREFOX_ZIP }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 